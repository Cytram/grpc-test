apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: vml
  labels:
    app: api-service
spec:
  clusterIP: None
  ports:
    - name: grpc
      port: 50051
      targetPort: 50051
  selector:
    app: api-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service
  namespace: vml
  labels:
    app: api-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: api-service 
          image: cytram/api-service
          args: ["-grayscale", "True", "-scale", "1024x768"]
          ports:
            - containerPort: 50051
          resources:
            requests:
              memory: 256Mi
              cpu: 500m
            limits:
              memory: 512Mi
              cpu: 1000m
          readinessProbe:
            exec:
              command:
                ["/app/grpc-health-probe", "-addr=:50051"]
          livenessProbe:
            exec:
              command:
                ["/app/grpc-health-probe", "-addr=:50051"]
        - name: envoy
          imagePullPolicy: Always
          image: envoyproxy/envoy:v1.12.1
          command: ["envoy"]
          args:
            - -c
            - /etc/envoy/config.yaml
            - --service-cluster
            - api-service
          resources:
            requests:
              memory: 256Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 300m
          ports:
          - containerPort: 50052
          - containerPort: 8001
          volumeMounts:
          - name: envoy-config
            mountPath: /etc/envoy
            readOnly: true
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-api-service
---
apiVersion: v1
data:
  config.yaml: |
      static_resources:
        listeners:
        - name: grpc
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 50052
          filter_chains:
          - filters:
            - name: envoy.http_connection_manager
              config:
                access_log:
                - name: envoy.file_access_log
                  config:
                    json_format:
                      protocol: "%PROTOCOL%"
                      duration: "%DURATION%"
                      request_method: "%REQ(:METHOD)%"
                      request_authority: "%REQ(:AUTHORITY)%"
                      request_path: "%REQ(PATH):50%"
                      start_time: "%START_TIME%"
                      protocol: "%PROTOCOL%"
                      bytes_send: "%BYTES_SENT%"
                      response_code: "%RESPONSE_CODE%"
                      response_code_details: "%RESPONSE_CODE_DETAILS%"
                      response_duration: "%RESPONSE_DURATION%"
                      response_flags: "%RESPONSE_FLAGS%"
                      response_tx_duration : "%RESPONSE_TX_DURATION%"
                      grpc_status: "%TRAILER(GRPC-MESSAGE?GRPC-STATUS)%"
                      requested_server_name: "%REQUESTED_SERVER_NAME%"
                      upstream_host: "%UPSTREAM_HOST%"
                      upstream_cluster: "%UPSTREAM_CLUSTER%"
                      upstream_local_adress: "%UPSTREAM_LOCAL_ADDRESS%"
                      upstream_transport_failure_reason: "%UPSTREAM_TRANSPORT_FAILURE_REASON%"
                      downstream_remote_address: "%DOWNSTREAM_REMOTE_ADDRESS%"
                      downstream_remote_address_without_port: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                      downstream_local_address: "%DOWNSTREAM_LOCAL_ADDRESS%"
                      downstream_local_address_without_port: "%DOWNSTREAM_LOCAL_ADDRESS_WITHOUT_PORT%"
                      x_forwarded_for: "%REQ(X-Forwarded-For)%"
                    path: "/dev/stdout"
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                  - name: service1_grpc
                    domains: ["*"]
                    routes:
                    - match: { prefix: "/processor.Processor" }
                      route: { cluster: image_processor }
                http_filters:
                - name: envoy.router
                  config: {}
        clusters:
        - name: image_processor
          connect_timeout: 5s
          type: STRICT_DNS
          lb_policy: ROUND_ROBIN
          dns_lookup_family: V4_ONLY
          http2_protocol_options: { }
          hosts: [{ socket_address: { address: image-processor.vml.svc.cluster.local, port_value: 50052 }}]

      admin:
        access_log_path: "/dev/null"
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8001
kind: ConfigMap
metadata:
  name: envoy-api-service
  namespace: vml
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: api-service
  namespace: vml
  labels:
    app: api-service
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-service
  minReplicas: 2
  maxReplicas: 12
  targetCPUUtilizationPercentage: 50

